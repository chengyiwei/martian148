(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{381:function(s,a,n){"use strict";n.r(a);var t=n(1),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"lab-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lab-3"}},[s._v("#")]),s._v(" Lab 3")]),s._v(" "),a("h3",{attrs:{id:"exercise-1-familiarizing-yourself-with-venus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercise-1-familiarizing-yourself-with-venus"}},[s._v("#")]),s._v(" Exercise 1: Familiarizing yourself with Venus")]),s._v(" "),a("ol",[a("li",[s._v("What do the "),a("code",[s._v(".data")]),s._v(", "),a("code",[s._v(".word")]),s._v(", "),a("code",[s._v(".text")]),s._v(" directives mean (i.e. what do you use them for)? "),a("strong",[s._v("Hint")]),s._v(": think about the 4 sections of memory.")])]),s._v(" "),a("p",[s._v("这里提示我们了内存的四个部分")]),s._v(" "),a("p",[a("code",[s._v(".data")]),s._v(" 表示内存数据上数据段的开始，")]),s._v(" "),a("p",[a("code",[s._v(".word 2, 4, 6, 8")]),s._v(" 表示在内存中连续存储4个32位整数（2、4、6、8）")]),s._v(" "),a("p",[a("code",[s._v("n: .word 9")]),s._v(" 定义了一个名为 "),a("code",[s._v("n")]),s._v(" 的标签，指向一个值为9的32位整数，也就是 "),a("code",[s._v("n=9")])]),s._v(" "),a("p",[a("code",[s._v(".text")]),s._v("表示代码段（text section）的开始。在这个段中，程序存放实际执行的机器指令（如函数、主程序等）。")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("Run the program to completion. What number did the program output? What does this number represent?")])]),s._v(" "),a("p",[s._v("输出了 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mn",[s._v("34")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("34")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"mord"},[s._v("3")]),a("span",{staticClass:"mord"},[s._v("4")])])])])]),s._v("，这个数字是 斐波那契数列的第 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mn",[s._v("9")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("9")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"mord"},[s._v("9")])])])])]),s._v(" 个")],1),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("At what address is "),a("code",[s._v("n")]),s._v(" stored in memory? "),a("strong",[s._v("Hint")]),s._v(": Look at the contents of the registers.")])]),s._v(" "),a("p",[s._v("通过观察寄存器 x28 我们可以得到 n 的地址是 "),a("code",[s._v("0x10000010")])]),s._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[s._v("Without actually editing the code (i.e. without going into the “Editor” tab), have the program calculate the 13th fib number (0-indexed) by "),a("em",[s._v("manually")]),s._v(" modifying the value of a register. You may find it helpful to first step through the code. If you prefer to look at decimal values, change the “Display Settings” option at the bottom.")])]),s._v(" "),a("p",[s._v("答案是 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mn",[s._v("233")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("233")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"mord"},[s._v("2")]),a("span",{staticClass:"mord"},[s._v("3")]),a("span",{staticClass:"mord"},[s._v("3")])])])])])],1),s._v(" "),a("h3",{attrs:{id:"exercise-2-translating-from-c-to-risc-v"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercise-2-translating-from-c-to-risc-v"}},[s._v("#")]),s._v(" Exercise 2: Translating from C to RISC-V")]),s._v(" "),a("ul",[a("li",[s._v("The register representing the variable "),a("code",[s._v("k")]),s._v(".")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("t0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("The register representing the variable "),a("code",[s._v("sum")]),s._v(".")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("s0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("The registers acting as pointers to the "),a("code",[s._v("source")]),s._v(" and "),a("code",[s._v("dest")]),s._v(" arrays.")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("la s1, source\nla s2, dest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("The assembly code for the loop found in the C code.")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" k"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    dest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" dest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("How the pointers are manipulated in the assembly code.")])]),s._v(" "),a("p",[s._v("在汇编代码中，先通过 "),a("code",[s._v("la")]),s._v(" 命令获取数组的首地址，然后通过 "),a("code",[s._v("add t1, s1, s3")]),s._v(" 来获取到 "),a("code",[s._v("source[i]")]),s._v(" 的值")]),s._v(" "),a("h3",{attrs:{id:"exercise-3-factorial"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercise-3-factorial"}},[s._v("#")]),s._v(" Exercise 3: Factorial")]),s._v(" "),a("p",[s._v("在这个 Exercise 中，需要实现一个函数计算阶乘")]),s._v(" "),a("div",{staticClass:"language-assembly line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(".globl factorial\n\n.data\nn: .word 10\n\n.text\nmain:\n    la t0, n\n    lw a0, 0(t0)\n    jal ra, factorial\n\n    addi a1, a0, 0\n    addi a0, x0, 1\n    ecall # Print Result\n\n    addi a1, x0, '\\n'\n    addi a0, x0, 11\n    ecall # Print newline\n\n    addi a0, x0, 10\n    ecall # Exit\n\nfactorial:\n    # 需要实现一个函数计算阶乘\n    addi t0, x0, 1    # t0 = 1\n    addi t1, x0, 1    # t1 = 1\n    \n    addi t2, x0, 1\n    beq a0, t2, end  # if a0 == t2 end\n    beq a0, x0, end \n\nloop:\n    mul t0, t0, t1 # t0 = t0 * t1\n    addi t1, t1, 1 # t1 += 1\n    bne t1, a0, loop # if t1 <= n loop\nend:\n    mv a0, t0 # a0 = t0\n    ret\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br")])]),a("h3",{attrs:{id:"exercise-4-calling-convention-checker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercise-4-calling-convention-checker"}},[s._v("#")]),s._v(" Exercise 4: Calling Convention Checker")]),s._v(" "),a("p",[s._v("这个练习需要你修复一个汇编代码，我们使用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ java -jar tools/venus.jar -cc lab03/cc_test.s\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("命令能获得当前代码的一些问题")]),s._v(" "),a("div",{staticClass:"language-assembly line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('.globl simple_fn naive_pow inc_arr\n\n.data\nfailure_message: .asciiz "Test failed for some reason.\\n"\nsuccess_message: .asciiz "Sanity checks passed! Make sure there are no CC violations.\\n"\narray:\n    .word 1 2 3 4 5\nexp_inc_array_result:\n    .word 2 3 4 5 6\n\n.text\nmain:\n    # We test our program by loading a bunch of random values\n    # into a few saved registers - if any of these are modified\n    # after these functions return, then we know calling\n    # convention was broken by one of these functions\n    li s0, 2623\n    li s1, 2910\n    # ... skipping middle registers so the file isn\'t too long\n    # If we wanted to be rigorous, we would add checks for\n    # s2-s20 as well\n    li s11, 134\n    # Now, we call some functions\n    # simple_fn: should return 1\n    jal simple_fn # Shorthand for "jal ra, simple_fn"\n    li t0, 1\n    bne a0, t0, failure\n    # naive_pow: should return 2 ** 7 = 128\n    li a0, 2\n    li a1, 7\n    jal naive_pow\n    li t0, 128\n    bne a0, t0, failure\n    # inc_arr: increments "array" in place\n    la a0, array\n    li a1, 5\n    jal inc_arr\n    jal check_arr # Verifies inc_arr and jumps to "failure" on failure\n    # Check the values in the saved registers for sanity\n    li t0, 2623\n    li t1, 2910\n    li t2, 134\n    bne s0, t0, failure\n    bne s1, t1, failure\n    bne s11, t2, failure\n    # If none of those branches were hit, print a message and exit normally\n    li a0, 4\n    la a1, success_message\n    ecall\n    li a0, 10\n    ecall\n\n# Just a simple function. Returns 1.\n#\n# FIXME Fix the reported error in this function (you can delete lines\n# if necessary, as long as the function still returns 1 in a0).\nsimple_fn:\n    # mv a0, t0  \n    li a0, 1\n    ret\n\n# Computes a0 to the power of a1.\n# This is analogous to the following C pseudocode:\n#\n# uint32_t naive_pow(uint32_t a0, uint32_t a1) {\n#     uint32_t s0 = 1;\n#     while (a1 != 0) {\n#         s0 *= a0;\n#         a1 -= 1;\n#     }\n#     return s0;\n# }\n#\n# FIXME There\'s a CC error with this function!\n# The big all-caps comments should give you a hint about what\'s\n# missing. Another hint: what does the "s" in "s0" stand for?\nnaive_pow:\n    # BEGIN PROLOGUE\n    # END PROLOGUE\n\n    addi sp, sp, -8\n    sw ra, 4(sp)\n    sw s0, 0(sp)\n    li s0, 1\nnaive_pow_loop:\n    beq a1, zero, naive_pow_end\n    mul s0, s0, a0\n    addi a1, a1, -1\n    j naive_pow_loop\nnaive_pow_end:\n    mv a0, s0\n    lw s0, 0(sp)\n    lw ra, 4(sp)\n    addi sp, sp, 8\n    ret\n\n# Increments the elements of an array in-place.\n# a0 holds the address of the start of the array, and a1 holds\n# the number of elements it contains.\n#\n# This function calls the "helper_fn" function, which takes in an\n# address as argument and increments the 32-bit value stored there.\ninc_arr:\n    addi sp, sp, -16\n    sw ra, 12(sp)\n    sw s0, 8(sp)\n    sw s1, 4(sp)\n\n    mv s0, a0 # Copy start of array to saved register\n    mv s1, a1 # Copy length of array to saved register\n    li t0, 0 # Initialize counter to 0\ninc_arr_loop:\n    beq t0, s1, inc_arr_end\n    slli t1, t0, 2 # Convert array index to byte offset\n    add a0, s0, t1 # Add offset to start of exp_inc_array_result\n\n    sw t0, 0(sp)\n    jal helper_fn\n    lw t0, 0(sp)\n\n    addi t0, t0, 1 # Increment counter\n    j inc_arr_loop\ninc_arr_end:\n    lw s1, 4(sp)\n    lw s0, 8(sp)\n    lw ra, 12(sp)\n    addi sp, sp, 16\n    ret\n\n# This helper function adds 1 to the value at the memory address in a0.\n# It doesn\'t return anything.\n# C pseudocode for what it does: "*a0 = *a0 + 1"\n#\n# FIXME This function also violates calling convention, but it might not\n# be reported by the Venus CC checker (try and figure out why).\n# You should fix the bug anyway by filling in the prologue and epilogue\n# as appropriate.\nhelper_fn:\n    addi sp, sp, -8\n    sw ra, 4(sp)\n    sw s0, 0(sp)\n\n    lw t1, 0(a0)\n    addi s0, t1, 1\n    sw s0, 0(a0)\n    \n    lw s0, 0(sp)\n    lw ra, 4(sp)\n    addi sp, sp, 8\n    ret\n\n# YOU CAN IGNORE EVERYTHING BELOW THIS COMMENT\n\n# Checks the result of inc_arr, which should contain 2 3 4 5 6 after\n# one call.\n# You can safely ignore this function; it has no errors.\ncheck_arr:\n    la t0, exp_inc_array_result\n    la t1, array\n    addi t2, t1, 20 # Last element is 5*4 bytes off\ncheck_arr_loop:\n    beq t1, t2, check_arr_end\n    lw t3, 0(t0)\n    lw t4, 0(t1)\n    bne t3, t4, failure\n    addi t0, t0, 4\n    addi t1, t1, 4\n    j check_arr_loop\ncheck_arr_end:\n    ret\n    \n\n# This isn\'t really a function - it just prints a message, then\n# terminates the program on failure. Think of it like an exception.\nfailure:\n    li a0, 4 # String print ecall\n    la a1, failure_message\n    ecall\n    li a0, 10 # Exit ecall\n    ecall\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br"),a("span",{staticClass:"line-number"},[s._v("149")]),a("br"),a("span",{staticClass:"line-number"},[s._v("150")]),a("br"),a("span",{staticClass:"line-number"},[s._v("151")]),a("br"),a("span",{staticClass:"line-number"},[s._v("152")]),a("br"),a("span",{staticClass:"line-number"},[s._v("153")]),a("br"),a("span",{staticClass:"line-number"},[s._v("154")]),a("br"),a("span",{staticClass:"line-number"},[s._v("155")]),a("br"),a("span",{staticClass:"line-number"},[s._v("156")]),a("br"),a("span",{staticClass:"line-number"},[s._v("157")]),a("br"),a("span",{staticClass:"line-number"},[s._v("158")]),a("br"),a("span",{staticClass:"line-number"},[s._v("159")]),a("br"),a("span",{staticClass:"line-number"},[s._v("160")]),a("br"),a("span",{staticClass:"line-number"},[s._v("161")]),a("br"),a("span",{staticClass:"line-number"},[s._v("162")]),a("br"),a("span",{staticClass:"line-number"},[s._v("163")]),a("br"),a("span",{staticClass:"line-number"},[s._v("164")]),a("br"),a("span",{staticClass:"line-number"},[s._v("165")]),a("br"),a("span",{staticClass:"line-number"},[s._v("166")]),a("br"),a("span",{staticClass:"line-number"},[s._v("167")]),a("br"),a("span",{staticClass:"line-number"},[s._v("168")]),a("br"),a("span",{staticClass:"line-number"},[s._v("169")]),a("br"),a("span",{staticClass:"line-number"},[s._v("170")]),a("br"),a("span",{staticClass:"line-number"},[s._v("171")]),a("br"),a("span",{staticClass:"line-number"},[s._v("172")]),a("br"),a("span",{staticClass:"line-number"},[s._v("173")]),a("br"),a("span",{staticClass:"line-number"},[s._v("174")]),a("br"),a("span",{staticClass:"line-number"},[s._v("175")]),a("br"),a("span",{staticClass:"line-number"},[s._v("176")]),a("br"),a("span",{staticClass:"line-number"},[s._v("177")]),a("br"),a("span",{staticClass:"line-number"},[s._v("178")]),a("br"),a("span",{staticClass:"line-number"},[s._v("179")]),a("br"),a("span",{staticClass:"line-number"},[s._v("180")]),a("br")])]),a("ul",[a("li",[s._v("What caused the errors in "),a("code",[s._v("simple_fn")]),s._v(", "),a("code",[s._v("naive_pow")]),s._v(", and "),a("code",[s._v("inc_arr")]),s._v(" that were reported by the Venus CC checker?")])]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("simple_fn")]),s._v(" 中，"),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[s._v("t")]),a("mn",[s._v("0")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("t_0")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.76508em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathdefault"},[s._v("t")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.30110799999999993em"}},[a("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[s._v("0")])])])]),a("span",{staticClass:"vlist-s"},[s._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])])]),s._v(" 是调用者保存的，然而在函数中调用需要赋一个初值")],1),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("naive_pow")]),s._v(" 中，使用了 "),a("code",[s._v("s0")]),s._v("（保存寄存器），但未在函数开头保存它")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("inc_arr")]),s._v(" 中，使用了 "),a("code",[s._v("s0")]),s._v(" 和 "),a("code",[s._v("s1")]),s._v("（保存寄存器），但未保存它们。调用 "),a("code",[s._v("helper_fn")]),s._v(" 前未保存临时寄存器 "),a("code",[s._v("t0")]),s._v("（虽然 "),a("code",[s._v("t0")]),s._v(" 是临时寄存器，但跨函数调用时需手动保存）。")]),s._v(" "),a("ul",[a("li",[s._v("In RISC-V, we call functions by jumping to them and storing the return address in the "),a("code",[s._v("ra")]),s._v(" register. Does calling convention apply to the jumps to the "),a("code",[s._v("naive_pow_loop")]),s._v(" or "),a("code",[s._v("naive_pow_end")]),s._v(" labels?\n在 RISC-V 中，我们通过跳转到函数并将返回地址存储在 "),a("code",[s._v("ra")]),s._v(" 寄存器中来调用函数。调用约定是否适用于跳转到 "),a("code",[s._v("naive_pow_loop")]),s._v(" 函数？ 或 "),a("code",[s._v("naive_pow_end")]),s._v(" 标签？")])]),s._v(" "),a("p",[s._v("不实用，"),a("code",[s._v("ra")]),s._v(" 属于函数调用，而 "),a("code",[s._v("naive_pow_loop")]),s._v(" 和 "),a("code",[s._v("naive_pow_end")]),s._v(" 属于标签跳转")]),s._v(" "),a("ul",[a("li",[s._v("Why do we need to store "),a("code",[s._v("ra")]),s._v(" in the prologue for "),a("code",[s._v("inc_arr")]),s._v(", but not in any other function?\n为什么我们需要将 "),a("code",[s._v("ra")]),s._v(" 存储在 "),a("code",[s._v("inc_arr")]),s._v(" 的序言中，而不是存储在任何其他函数中？")])]),s._v(" "),a("p",[s._v("因为接下来需要调用 "),a("code",[s._v("helper_fn")]),s._v(" 函数，必须在在开始的时候保存 "),a("code",[s._v("ra")])]),s._v(" "),a("ul",[a("li",[s._v("Why wasn’t the calling convention error in "),a("code",[s._v("helper_fn")]),s._v(" reported by the CC checker? (Hint: it’s mentioned above in the exercise instructions.)")])]),s._v(" "),a("p",[s._v("不知道，不会，大佬教教")]),s._v(" "),a("h3",{attrs:{id:"exercise-5-risc-v-function-calling-with-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercise-5-risc-v-function-calling-with-map"}},[s._v("#")]),s._v(" Exercise 5: RISC-V function calling with "),a("code",[s._v("map")])]),s._v(" "),a("div",{staticClass:"language-assembly line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(".globl map\n\n.text\nmain:\n    jal ra, create_default_list\n    add s0, a0, x0  # a0 = s0 is head of node list\n\n    #print the list\n    add a0, s0, x0\n    jal ra, print_list\n\n    # print a newline\n    jal ra, print_newline\n\n    # load your args\n    add a0, s0, x0  # load the address of the first node into a0\n\n    # load the address of the function in question into a1 (check out la on the green sheet)\n    la a1, square    # 加载 square 函数的地址到 a1\n\n    # issue the call to map\n    jal ra, map\n\n    # print the list\n    add a0, s0, x0\n    jal ra, print_list\n\n    # print another newline\n    jal ra, print_newline\n\n    addi a0, x0, 10\n    ecall #Terminate the program\n\nmap:\n    # Prologue: Make space on the stack and back-up registers\n    addi sp, sp, -12    # 分配栈空间（保存 ra, s0, s1）\n    sw ra, 8(sp)        # 保存返回地址\n    sw s0, 4(sp)        # 保存 s0\n    sw s1, 0(sp)        # 保存 s1\n\n    beq a0, x0, done    # If we were given a null pointer (address 0), we're done.\n\n    add s0, a0, x0  # Save address of this node in s0\n    add s1, a1, x0  # Save address of function in s1\n\n    # load the value of the current node into a0\n    lw a0, 0(s0)    # 加载当前节点的值到 a0（作为函数参数）\n\n    # Call the function in question on that value. DO NOT use a label (be prepared to answer why).\n    jalr ra, s1, 0  # 调用函数（地址在 s1 中），结果存储在 a0\n\n    # store the returned value back into the node\n    sw a0, 0(s0)    # 将返回值存回当前节点的 value\n\n    # Load the address of the next node into a0\n    lw a0, 4(s0)    # 加载下一个节点的地址到 a0\n\n    # Put the address of the function back into a1 to prepare for the recursion\n    add a1, s1, x0  # 将函数地址从 s1 恢复到 a1\n\n    # recurse\n    jal ra, map     # 递归调用 map\n\ndone:\n    # Epilogue: Restore register values and free space from the stack\n    lw s1, 0(sp)    # 恢复 s1\n    lw s0, 4(sp)    # 恢复 s0\n    lw ra, 8(sp)    # 恢复 ra\n    addi sp, sp, 12 # 释放栈空间\n    jr ra           # Return to caller\n\nsquare:\n    mul a0, a0, a0\n    jr ra\n\n# ... (其余代码保持不变)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);