(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{378:function(t,a,s){"use strict";s.r(a);var i=s(1),c=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"计算机组成原理笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机组成原理笔记"}},[t._v("#")]),t._v(" 计算机组成原理笔记")]),t._v(" "),a("h2",{attrs:{id:"存储器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储器"}},[t._v("#")]),t._v(" 存储器")]),t._v(" "),a("p",[t._v("现代计算机以"),a("strong",[t._v("存储器")]),t._v("为中心，它是计算机中存放"),a("strong",[t._v("指令和数据")]),t._v("的主要部件")]),t._v(" "),a("h3",{attrs:{id:"存储器分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储器分类"}},[t._v("#")]),t._v(" 存储器分类")]),t._v(" "),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323210103230.png",alt:"image-20250323210103230"}}),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323210121601.png",alt:"image-20250323210121601"}})]),t._v(" "),a("h3",{attrs:{id:"存储器性能指标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储器性能指标"}},[t._v("#")]),t._v(" 存储器性能指标")]),t._v(" "),a("ul",[a("li",[t._v("存储容量：可以存储的二进制信息的总量")])]),t._v(" "),a("p",[t._v("存储容量 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mo",[t._v("×")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\times")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.66666em","vertical-align":"-0.08333em"}}),a("span",{staticClass:"mord"},[t._v("×")])])])])]),t._v(" 存储字长 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mo",[t._v("×")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\times")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.66666em","vertical-align":"-0.08333em"}}),a("span",{staticClass:"mord"},[t._v("×")])])])])]),t._v(" 存储单元数量")],1),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323210434492.png",alt:"image-20250323210434492"}})]),t._v(" "),a("ul",[a("li",[t._v("存取速度，分为三个部分\n"),a("ol",[a("li",[t._v("存取时间")]),t._v(" "),a("li",[t._v("存取周期")]),t._v(" "),a("li",[t._v("存储器带宽")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323210722869.png",alt:" "}})]),t._v(" "),a("h3",{attrs:{id:"存储系统层次结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储系统层次结构"}},[t._v("#")]),t._v(" 存储系统层次结构")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323210917384.png",alt:"image-20250323210917384"}})]),t._v(" "),a("h3",{attrs:{id:"主存储器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主存储器"}},[t._v("#")]),t._v(" 主存储器")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323212242474.png",alt:"image-20250323212242474"}})]),t._v(" "),a("p",[t._v("读入信息的过程，假设要读取 110 位置的信息")]),t._v(" "),a("ol",[a("li",[t._v("首先 CPU 通过地址总线把 110 给 MAR")]),t._v(" "),a("li",[t._v("MAR 把 110 传给译码器，译码器选中第 6 个位置")]),t._v(" "),a("li",[t._v("存储器复制第 6 个位置的字节到 MDR 中")]),t._v(" "),a("li",[t._v("MDR 通过地址总线把数据传给 CPU")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323212632536.png",alt:"image-20250323212632536"}})]),t._v(" "),a("p",[t._v("写入信息的过程，假设要写入 11110000 到 111 位置")]),t._v(" "),a("ol",[a("li",[t._v("首先数据总线把 11110000 传给 MDR")]),t._v(" "),a("li",[t._v("地址总线把 111 传给 MAR")]),t._v(" "),a("li",[t._v("MAR 把 111 传给译码器选中第 7 个位置")]),t._v(" "),a("li",[t._v("修改第 7 个位置为 11110000")])]),t._v(" "),a("p",[t._v("随着技术的发展，内存都被制成大规模电路芯片，MAR 和 MDR 都被集成到了 CPU 内部")]),t._v(" "),a("h4",{attrs:{id:"地址译码结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#地址译码结构"}},[t._v("#")]),t._v(" 地址译码结构")]),t._v(" "),a("p",[t._v("单译码结构")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250324001956361.png",alt:"image-20250324001956361"}})]),t._v(" "),a("p",[t._v("双译码结构")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250324131055048.png",alt:" "}})]),t._v(" "),a("p",[t._v("相对比之下，双译码结构的译码输出线减少很多")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250324130445896.png",alt:"image-20250324130445896"}})]),t._v(" "),a("p",[t._v("单译码结构只适用于容量很小的芯片，在大容量存储器中普遍采用双译码结构")]),t._v(" "),a("h4",{attrs:{id:"主存中数据的存放"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主存中数据的存放"}},[t._v("#")]),t._v(" 主存中数据的存放")]),t._v(" "),a("ul",[a("li",[t._v("存储字长：CPU 一次能处理的二进制数据的位数")]),t._v(" "),a("li",[t._v("存储字长：主存中的一个存储单元所能存储的二进制位数")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250324131626435.png",alt:"image-20250324131626435"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250324131931455.png",alt:""}})]),t._v(" "),a("p",[t._v("字节地址右移一位得到半字地址，半字地址右移一位得到字")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250324141228488.png",alt:"image-20250324141228488"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250324142751743.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250324143233647.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"主存与-cpu-的链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主存与-cpu-的链接"}},[t._v("#")]),t._v(" 主存与 CPU 的链接")]),t._v(" "),a("ol",[a("li",[t._v("位拓展")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250324141352838.png",alt:"image-20250324141352838"}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("字扩展")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323175200520.png",alt:"image-20250323175200520"}})]),t._v(" "),a("p",[t._v("可以理解为，CPU 数据总线的高三位用来判断要存储到哪一个 存储器，后面的位用来表示具体存到存储器的那个位置")]),t._v(" "),a("img",{staticStyle:{zoom:"30%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323180354071.png",alt:"image-20250323180354071"}}),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("字位同时扩展")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250323181026440.png",alt:" "}})]),t._v(" "),a("h4",{attrs:{id:"主存系统的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主存系统的优化"}},[t._v("#")]),t._v(" 主存系统的优化")]),t._v(" "),a("p",[t._v("随着计算机技术的发展，主存的存取速度已经成为提升计算机系统性能的瓶颈")]),t._v(" "),a("p",[t._v("提升主存储器的存取速度的方法有：")]),t._v(" "),a("ul",[a("li",[t._v("使用高速原件来提高主存的访问速度")]),t._v(" "),a("li",[t._v("通过存储器的并行工作来提高主存的访问速度\n"),a("ul",[a("li",[t._v("双端口存储器")]),t._v(" "),a("li",[t._v("单体多字存储器")]),t._v(" "),a("li",[t._v("多体交叉存储器")])])])]),t._v(" "),a("p",[a("strong",[t._v("双端口存储器")])]),t._v(" "),a("p",[t._v("双端口存储器有两套控制和地址总线")]),t._v(" "),a("p",[t._v("CPU 的两个核心访问不同的地址时，可以并行读写")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250330140817747.png",alt:"image-20250330140817747"}})]),t._v(" "),a("p",[t._v("当访问相同的地址时，就会产生读写冲突")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250330141014269.png",alt:"image-20250330141014269"}})]),t._v(" "),a("p",[t._v("使用一个忙标志判断是否有效")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250330141114226.png",alt:"image-20250330141114226"}})]),t._v(" "),a("p",[t._v("由于冲突时不可避免的，因此双端口存储器的访问速度不可能提高一倍")]),t._v(" "),a("p",[a("strong",[t._v("单体多字存储器")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250330141839804.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("多体交叉存储器")])]),t._v(" "),a("p",[t._v("根据多个存储器编制方式的不同，分为：高位多体交叉存储器，和低位多体交叉存储器")]),t._v(" "),a("ol",[a("li",[t._v("高位多体交叉")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250330142544488.png",alt:"image-20250330142544488"}})]),t._v(" "),a("p",[t._v("其实高位多体交叉存储器和字拓展完全相同")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("低位多体交叉")])]),t._v(" "),a("p",[t._v("将高位多体交叉存储器的 模块地址 和 块内地址交换，即可得到低位多体交叉存储器")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250330143652726.png",alt:"image-20250330143652726"}})]),t._v(" "),a("p",[t._v("注意：可以从任意地址（某个模块，某个存储单元）开始顺序存取，不一定从 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("M")]),a("mn",[t._v("0")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("M_0")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.30110799999999993em"}},[a("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.10903em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("0")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])])])])])]),t._v(" 开始")],1),t._v(" "),a("h2",{attrs:{id:"i-o-系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-o-系统"}},[t._v("#")]),t._v(" I/O 系统")]),t._v(" "),a("h3",{attrs:{id:"i-o-系统基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-o-系统基本概念"}},[t._v("#")]),t._v(" I/O 系统基本概念")]),t._v(" "),a("ul",[a("li",[t._v("外部设备：鼠标，键盘，打印机")]),t._v(" "),a("li",[t._v("接口：在各个外设与主机之间传输数据时进行各种协调工作的逻辑部件")]),t._v(" "),a("li",[t._v("输入设备：向计算机系统输入命令和文本、数据等信息的部件。键盘、鼠标")]),t._v(" "),a("li",[t._v("输出设备：计算机系统中的信息输出到计算机外部进行显示，交换的部件。显示器，打印机")]),t._v(" "),a("li",[t._v("外存设备：硬盘，光盘")])]),t._v(" "),a("h3",{attrs:{id:"i-o-控制方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-o-控制方式"}},[t._v("#")]),t._v(" I/O 控制方式")]),t._v(" "),a("h4",{attrs:{id:"_1-程序查询方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-程序查询方式"}},[t._v("#")]),t._v(" 1. 程序查询方式")]),t._v(" "),a("p",[t._v("由 CPU 通过程序不断查询 I/O 设备是否已做好准备，从而控制 I/O 设备与主机交换信息")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250402204108805.png",alt:"image-20250402204108805"}})]),t._v(" "),a("p",[t._v("这个是有关一个设备的程序查询方式的流程图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250402204230598.png",alt:"image-20250402204230598"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250402204341318.png",alt:"image-20250402204341318"}})]),t._v(" "),a("p",[t._v("下面是程序中断方式的接口电路")]),t._v(" "),a("h4",{attrs:{id:"_2-程序中断方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-程序中断方式"}},[t._v("#")]),t._v(" 2. 程序中断方式")]),t._v(" "),a("p",[t._v("计算机在执行程序的过程中，当出现异常或者特殊请求时，计算机停止现行程序的运行，转向对这些异常情况或特殊请求的处理，处理结束后再返回到现行程序的间断处，继续源程序，就是中断。")]),t._v(" "),a("p",[t._v("I/O 中断指的就是，设备准备的同时，CPU 不用等待，运行现有的程序，当设备准备就绪了并像 CPU 提出请求，中断 CPU 现行程序转入 I/O 服务程序，就叫 I/O 中断，如图：")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250404235350542.png",alt:"image-20250404235350542"}}),t._v(" "),a("p",[t._v("只在 I/O 设备准备就绪并向 CPU 发出中断请求时才给予相应，在 I/O 设备的准备阶段或者工作阶段，CPU 都能去干自己的事情，能进一步提高 CPU 的工作效率")]),t._v(" "),a("p",[t._v("如果有多个 I/O 设备同时需要访问 CPU 呢？那么就需要比出 I/O 设备的优先级，可以通过软件或者硬件的方式比较优先级，但是硬件方式往往更快。下面就是一个硬件实现的排队器")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250405131902188.png",alt:"image-20250405131902188"}}),t._v(" "),a("p",[t._v("例如，当 INTR1，2，3，4 同时发出请求时， 输出只会输出 INTR1 的请求。")]),t._v(" "),a("p",[t._v("但是往往这样的优先顺序不是绝对的，我们就需要更加自由得确定 I/O 设备之间的优先级别，比如说，我们在运行第 4 个设备的时候，不想被设备 1 的请求打断。为了做到这一点，我们可以对每个设备单独设置一个"),a("strong",[t._v("触发屏蔽器")]),t._v(" MASK，当运行第 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("i")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("i")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.65952em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathdefault"},[t._v("i")])])])])]),t._v(" 个设备的时候，会设置所有设备的 MASK，若此时第 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("j")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("j")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.85396em","vertical-align":"-0.19444em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")])])])])]),t._v(" 个设备的那一位 MASK 为 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mn",[t._v("1")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("1")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"mord"},[t._v("1")])])])])]),t._v(" 的话，就说明设备 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("j")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("j")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.85396em","vertical-align":"-0.19444em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")])])])])]),t._v(" 被屏蔽了")],1),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250405132350137.png",alt:"image-20250405132350137"}}),t._v(" "),a("p",[t._v("从图中可以看出，当设备准备就绪（D = 1）且 设备未被屏蔽（MASK = 0） 的时候，向 CPU 提出中断请求信号（INTR = 1）")]),t._v(" "),a("p",[t._v("CPU 相应了中断之后，就需要转去执行设备中断服务程序，也就是这里的 PC 需要跳转到主存中设备中断服务程序的入口地址")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250405133547238.png",alt:"image-20250405133547238"}}),t._v(" "),a("p",[t._v("从 CPU 接收中断信号到开始运行中断服务程序这个过程中的一系列过程叫做中断隐指令，一般分为三步：")]),t._v(" "),a("ol",[a("li",[t._v("关中断：这个过程中不要被其他中断打断了")]),t._v(" "),a("li",[t._v("保存断点：记录 PC 当前的值 K")]),t._v(" "),a("li",[t._v("引入中断服务程序：就是把中断服务程序的入口地址传给 PC，这个地方其实设计了一个两级跳转的方式")])]),t._v(" "),a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250405134112896.png",alt:"image-20250405134112896"}}),t._v(" "),a("p",[t._v("中断向量地址形成部件 将 中断向量的地址传给 PC，PC 先跳转到向量地址的地方，例如：12H，然后执行这个位置的 JMP 指令，跳转到入口地址，例如：200。")]),t._v(" "),a("p",[t._v("为什么要这样跳转两次？如果需要修改 打印机服务程序的值的时候，从现在的 200～299，改到 200～399，那么我们还需要去修改 硬件电路麻烦，但是现在这种方式只需要修改主存中的向量地址的后面的值就好了")]),t._v(" "),a("p",[t._v("下面看一下完整的中断服务程序的流程：（中断周期可以理解为中断隐指令）")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250405135718963.png",alt:"image-20250405135718963"}}),t._v(" "),a("ol",[a("li",[t._v("保护现场：保存程序的断点位置，和保留通用寄存器内容和状态寄存器中的内容，前者由中断隐指令完成，后者由中断服务程序完成。")]),t._v(" "),a("li",[t._v("中断服务：这是中断服务程序的主体部分，也是 CPU 和 I/O 设备交互的主要过程")]),t._v(" "),a("li",[t._v("恢复现场：将之前保护现场的内容恢复，可以用 pop 指令把寄存器中的一些值恢复")]),t._v(" "),a("li",[t._v("中断返回：让 PC 回到原来的断点处")])]),t._v(" "),a("p",[t._v("实际上，在执行中断程序的时候是可以被更高界别的中断程序中断的（套娃）")]),t._v(" "),a("p",[t._v("只要在保护完现场之后，再开中断，恢复现场前关中断就好了")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250405140549023.png",alt:"image-20250405140549023"}}),t._v(" "),a("p",[t._v("这个也叫多重中断")]),t._v(" "),a("h4",{attrs:{id:"_3-dma-方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-dma-方式"}},[t._v("#")]),t._v(" 3. DMA 方式")]),t._v(" "),a("p",[t._v("DMA 其实也可以理解为一个 I/O 设备接口，相当于 I/O 设备需要通过 DMA 和主存进行访问，DMA 一般用于处理块状的数据，或者比较高速的信息交换")]),t._v(" "),a("p",[t._v("DMA 和主存之间有一条单独的信息通路，所以能不通过 CPU 和主存交换数据。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250406150801322.png",alt:"image-20250406150801322"}})]),t._v(" "),a("p",[t._v("图中就是 DMA 工作的一个基本过程：")]),t._v(" "),a("ol",[a("li",[t._v("预处理：\n"),a("ul",[a("li",[t._v("CPU 给 DMA 表明是读数据还是写数据")]),t._v(" "),a("li",[t._v("给 DMA 的主存地址计数器（AR）写入初始地址")]),t._v(" "),a("li",[t._v("给 DMA 的 DAR 写入设备的读写地址")]),t._v(" "),a("li",[t._v("给 DMA 的 传送长度寄存器 WC 写入 传送数据的个数，表示需要传送多少个数据")])])]),t._v(" "),a("li",[t._v("数据传送\n"),a("ul",[a("li",[t._v("把一个字的数据冲到 数据缓冲寄存器 BR 中，")]),t._v(" "),a("li",[t._v("DMA 通过 HRQ 申请总线控制权")]),t._v(" "),a("li",[t._v("DMA 把数据缓冲寄存器打到主存中（输入为例）")]),t._v(" "),a("li",[t._v("修改主存地址计数器和传送长度计数器")])])]),t._v(" "),a("li",[t._v("后处理\n"),a("ul",[a("li",[t._v("DMA 的中断机构向 CPU 提出中断请求，表示传送完毕")])])])]),t._v(" "),a("p",[t._v("除了图中这种单总线的结构，DMA 还有一种三总线的结构")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250406152309935.png",alt:"image-20250406152309935"}}),t._v(" "),a("p",[t._v("DMA 接口和主存之间能直接通信，但是如果 DMA 在访问主存的时候 CPU 也要访问主存，就会产生冲突，为了避免这种冲突，有三种解决方案")]),t._v(" "),a("ol",[a("li",[t._v("停止 CPU 访问主存")])]),t._v(" "),a("p",[t._v("字面意思，就是等 DMA 访问完了之后 CPU 再访问")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250406152553751.png",alt:"image-20250406152553751"}}),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("DMA 和 CPU 交替访问")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250406152645592.png",alt:"image-20250406152645592"}}),t._v(" "),a("p",[t._v("把 CPU 的工作周期的时间分两半，一半给 DMA，一半给 CPU，这种情况适用于 CPU 和 DMA 读写频率类似的情况，如果相差很大就会导致浪费")]),t._v(" "),a("p",[t._v("这种方式的硬件电路设计起来也很复杂")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("周期挪用（周期窃取）\n"),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://pic-1301573324.cos.ap-chengdu.myqcloud.com/image-20250406153435071.png",alt:"image-20250406153435071"}})])]),t._v(" "),a("p",[t._v("当发出 DMA 请求时，I/O 设备挪用一个或几个主存周期给 DMA，而 DMA 不请求时， CPU 访问主存。当 DMA 发出访问请求时，CPU 可能的状态有三种：")]),t._v(" "),a("ul",[a("li",[t._v("CPU 没有访问主存，在自己进行一些运算，这种情况直接挪用")]),t._v(" "),a("li",[t._v("CPU 在访问主存，必须要等存取周期结束，CPU 将总线的占有权让出")]),t._v(" "),a("li",[t._v("CPU 和 MDA 同时请求，这个时候 I/O 设备的访问优先级高于 CPU")])]),t._v(" "),a("p",[t._v("周期挪用的方式是一种广泛采用的方法")]),t._v(" "),a("h4",{attrs:{id:"_4-通道方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-通道方式"}},[t._v("#")]),t._v(" 4. 通道方式")]),t._v(" "),a("p",[t._v("在系统设于通道控制部件，每个通道都挂有若干外设，主机在执行 I/O 命令时，只需启动有关通道，通道将执行通道程序，从而完成 I/O 操作")])])}),[],!1,null,null,null);a.default=c.exports}}]);